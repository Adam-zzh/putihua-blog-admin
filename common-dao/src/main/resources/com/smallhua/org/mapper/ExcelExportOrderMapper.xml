<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smallhua.org.mapper.ExcelExportOrderMapper">
    <resultMap id="BaseResultMap" type="com.smallhua.org.model.ExcelExportOrder">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="order_sn" jdbcType="VARCHAR" property="orderSn"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="store_name" jdbcType="VARCHAR" property="storeName"/>
        <result column="order_amount" jdbcType="DECIMAL" property="orderAmount"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="add_time" jdbcType="BIGINT" property="addTime"/>
        <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
    </resultMap>
    <resultMap id="orderMapForExport" type="com.small.org.modal.dto.ExportOrderForExcel">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="order_sn" jdbcType="VARCHAR" property="orderSn"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="store_name" jdbcType="VARCHAR" property="storeName"/>
        <result column="order_amount" jdbcType="DECIMAL" property="orderAmount"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="add_time" jdbcType="TIMESTAMP" property="addTime"/>
        <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="product_sn" jdbcType="VARCHAR" property="productSn"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="product_price" jdbcType="DECIMAL" property="productPrice"/>
        <result column="product_quatity" jdbcType="INTEGER" property="productQuatity"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, order_sn, user_name, store_name, order_amount, address, add_time, modified_time,
        status
    </sql>
    <sql id="ORDER_COLUMN_LIST_FOR_EXPORT">
        o.id, o.order_sn, o.user_name, o.store_name, o.order_amount, o.address, from_unixtime(o.add_time) as add_time, o.modified_time,
        o.status, op.product_sn, op.product_name, op.product_price, op.product_quatity
    </sql>
    <select id="selectByExample" parameterType="com.smallhua.org.model.ExcelExportOrderExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from excel_export_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from excel_export_order
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from excel_export_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.smallhua.org.model.ExcelExportOrderExample">
        delete from excel_export_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.smallhua.org.model.ExcelExportOrder">
    insert into excel_export_order (id, order_sn, user_name, 
      store_name, order_amount, address, 
      add_time, modified_time, status
      )
    values (#{id,jdbcType=BIGINT}, #{orderSn,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{storeName,jdbcType=VARCHAR}, #{orderAmount,jdbcType=DECIMAL}, #{address,jdbcType=VARCHAR}, 
      #{addTime,jdbcType=BIGINT}, #{modifiedTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.smallhua.org.model.ExcelExportOrder" useGeneratedKeys="true"
            keyProperty="id">
        insert into excel_export_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderSn != null">
                order_sn,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="storeName != null">
                store_name,
            </if>
            <if test="orderAmount != null">
                order_amount,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
            <if test="modifiedTime != null">
                modified_time,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="orderSn != null">
                #{orderSn,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="storeName != null">
                #{storeName,jdbcType=VARCHAR},
            </if>
            <if test="orderAmount != null">
                #{orderAmount,jdbcType=DECIMAL},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                #{addTime,jdbcType=BIGINT},
            </if>
            <if test="modifiedTime != null">
                #{modifiedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.smallhua.org.model.ExcelExportOrderExample"
            resultType="java.lang.Long">
        select count(*) from excel_export_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="queryTotalRecordsForExport" resultType="java.lang.Long">
        select count(1) from excel_export_order o join excel_export_order_product op on o.id = op.order_id
    </select>
    <select id="queryOrderProductForExport" resultMap="orderMapForExport">
        SELECT
        <include refid = "ORDER_COLUMN_LIST_FOR_EXPORT"> </include>
        FROM
        excel_export_order o
        JOIN excel_export_order_product op
        ON o.id = op.order_id
        JOIN
        (SELECT op1.id FROM excel_export_order o1 JOIN excel_export_order_product op1 ON o1.id = op1.order_id
        ORDER BY o1.add_time DESC LIMIT ${(currentPage-1)*pageSize}, #{pageSize})  AS page
        ON page.id = op.id
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update excel_export_order
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.orderSn != null">
                order_sn = #{record.orderSn,jdbcType=VARCHAR},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.storeName != null">
                store_name = #{record.storeName,jdbcType=VARCHAR},
            </if>
            <if test="record.orderAmount != null">
                order_amount = #{record.orderAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.addTime != null">
                add_time = #{record.addTime,jdbcType=BIGINT},
            </if>
            <if test="record.modifiedTime != null">
                modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update excel_export_order
        set id = #{record.id,jdbcType=BIGINT},
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
        user_name = #{record.userName,jdbcType=VARCHAR},
        store_name = #{record.storeName,jdbcType=VARCHAR},
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
        address = #{record.address,jdbcType=VARCHAR},
        add_time = #{record.addTime,jdbcType=BIGINT},
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
        status = #{record.status,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.smallhua.org.model.ExcelExportOrder">
        update excel_export_order
        <set>
            <if test="orderSn != null">
                order_sn = #{orderSn,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="storeName != null">
                store_name = #{storeName,jdbcType=VARCHAR},
            </if>
            <if test="orderAmount != null">
                order_amount = #{orderAmount,jdbcType=DECIMAL},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=BIGINT},
            </if>
            <if test="modifiedTime != null">
                modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smallhua.org.model.ExcelExportOrder">
    update excel_export_order
    set order_sn = #{orderSn,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      store_name = #{storeName,jdbcType=VARCHAR},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      address = #{address,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=BIGINT},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>